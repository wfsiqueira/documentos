*DOCKER SWARM ITAU*

172.23.2.5	itau-pp-swarm-manager01 itau-pp-swarm-manager01.azure.zup.com.br
172.23.2.6	itau-pp-swarm-manager02 itau-pp-swarm-manager02.azure.zup.com.br
172.23.2.7	itau-pp-swarm-manager03 itau-pp-swarm-manager03.azure.zup.com.br
172.23.2.8	itau-pp-zupme-couchbase01 itau-pp-zupme-couchbase01.azure.zup.com.br

172.17.0.150

itau-pp-swarm-manager.azure.zup.com.br


[root@itau-swarm-manager01 ~]# ifconfig 
docker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.152.1  netmask 255.255.255.0  broadcast 192.168.152.255
        ether 02:42:71:b3:f6:c1  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

docker_gwbridge: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.18.0.1  netmask 255.255.0.0  broadcast 172.18.255.255
        inet6 fe80::42:caff:fe33:79de  prefixlen 64  scopeid 0x20<link>
        ether 02:42:ca:33:79:de  txqueuelen 0  (Ethernet)
        RX packets 24350  bytes 27831256 (26.5 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 33059  bytes 14063048 (13.4 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0


yum -y remove docker docker-common docker-selinux docker-engine
yum install -y yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install -y docker-ce gettext
mkdir /etc/docker
mkdir -p /etc/ssl/docker/token
chmod 0700 /etc/docker
[root@itau-swarm-manager01 docker]# cat /etc/docker/daemon.json 
{
"bip": "192.168.152.1/24",
"tlsverify": true,
"tlscacert": "/etc/ssl/docker/ca.pem",
"tlscert": "/etc/ssl/docker/server-cert.pem",
"tlskey": "/etc/ssl/docker/server-key.pem",
"hosts": [ "tcp://0.0.0.0:2376" , "unix:///var/run/docker.sock" ]
}

# cat /etc/docker/daemon.json 
{
"bip": "192.168.52.1/24"
}



systemctl start docker

docker network create --subnet 172.27.52.0/23 --opt com.docker.network.bridge.name=docker_gwbridge --opt com.docker.network.bridge.enable_icc=false docker_gwbridge


docker network create --subnet 172.18.0.0/16 \
	--opt com.docker.network.bridge.name=docker_gwbridge \
	--opt com.docker.network.bridge.enable_icc=false \
	--opt com.docker.network.bridge.enable_ip_masquerade=true \
	itau-preprod

docker network create --subnet 192.168.142.0/22 --opt com.docker.network.bridge.name=docker_gwbridge --opt com.docker.network.bridge.enable_icc=false docker_gwbridge

Swarm initialized: current node (mfhrvm2pv3t6o4w10jm7hmrmk) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-4vjil75lh3q0ubgn2gqzn26rjy2sesjo5nrfxqo1itjabbdbuk-5p05rzmrsc3etk12dio5e0154 172.23.2.5:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.


docker network create --subnet 192.168.144.0/22 --opt com.docker.network.bridge.name=docker_gwbridge --opt com.docker.network.bridge.enable_icc=false --opt com.docker.network.bridge.enable_ip_masquerade=true docker_gwbridge

docker network create --driver overlay --scope swarm itau-preprod

openssl x509 -req -days 9999 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile extfile.cnf
openssl x509 -req -days 9999 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out cert.pem -extfile extfile.cnf


docker_gwbridge
192.168.144.0/22

commons
10.128.72.0/22

ipiranga-marketplace
10.128.68.0/24

ole
10.128.69.0/24

itau-stg
10.150.30.0/22


AS-ITAU-PreProd-Docker-Swarm
ELB-ItauPreProd-PublicIP - 191.239.249.0
ELB-Itau-PreProd-Docker-Swarm
ILB-Itau-PreProd-Docker-Swarm
ELB-Itau-PreProd-Docker-Swarm-Backend-pools


itau-pp-swarm-manager01
172.23.2.5

itau-pp-swarm-manager02
172.23.2.6

itau-pp-swarm-manager03
172.23.2.7
Standard B1s (1 vcpus, 1 GB memory)

Serviços necessários: extensions, benefit-savings, com, som e seus respectivos banco de dados

==URLs PRE-PROD==
itau-deploy-preprod.gateway.zup.me
itau-preprod.gateway.zup.me
itau-com-preprod.zup.me
itau-som-preprod.zup.me
itau-benefit-saving-preprod.zup.me
itau-rw-extensions-preprod.zup.me

==URLs PROD==
IP: 191.234.176.116
itau-com.zup.me
itau-som.zup.me
itau-lojabeneficios.zup.me



commons-openvpn02 - 191.234.183.33

ELB-Itau-Stg-Docker-Swarm - 191.232.164.38 (ELB-ItauQA-PublicIP)


curl -X POST \
 https://itau.staging.gateway.zup.me/conectcar/v1/cliente \
 -H 'Cache-Control: no-cache' \
 -H 'Content-Type: application/json' \
 -H 'x-application-key: c11d07f01038013642b5000d3ac06d76' \
 -d '{
 "dados_cliente": {
   "nome": "Matias",
   "sobrenome" : "Nascimento",
   "cpf": "02134340835",
   "email": "joao@teste.com",
   "celular" : "19988314638",
   "endereco_cep" : "13275400",
   "endereco_logradouro" : "rua 123",
   "endereco_numero" : "2",
   "endereco_complemento" : "casa",
   "endereco_bairro" : "ortizes",
   "endereco_cidade" : "campinas",
   "endereco_uf" : "SP",
   "data_nascimento" : "2017-01-01"
 }
}'

couchbase_server_admin=zupmepreprodadmin
couchbase_server_password=pAPZ5JE4iv



===============================================================

com e som => todos os ambientes
benefit saving e extension => apenas dev / qa / pre-prod
benefit saving e extension em prod agente faz na implantação com janela



==DEV==
*com
tag=dev-29 docker-local-dev stack deploy --with-registry-auth -c itau-com.yml itau-com

*itau-benefit-saving
tag=dev-89 docker-local-dev stack deploy --with-registry-auth -c itau-benefit-saving.yml itau-benefit-saving

*itau-lbe-front-end
tag=dev-155 docker-local-dev stack deploy --with-registry-auth -c itau-lbe-front-end.yml itau-lbe-front-end

*itau-lbe-security
tag=dev-10 docker-local-dev stack deploy --with-registry-auth -c itau-lbe-security.yml itau-lbe-security

*itau-rw
tag=dev-473 docker-local-dev stack deploy --with-registry-auth -c itau-rw.yml itau-rw

*itau-som
tag=dev-30 docker-local-dev stack deploy --with-registry-auth -c itau-som.yml itau-som


==STG==
*com-stg
tag=qa-62 docker-itau-stg stack deploy --with-registry-auth -c itau-com.yml itau-com

==PRE-PROD==
*itau-com_services
tag=0.0.5 docker-itau-preprod stack deploy --with-registry-auth -c itau-com.yml itau-com

*itau-som_services
tag=0.0.6 docker-itau-preprod stack deploy --with-registry-auth -c itau-som.yml itau-som

*itau-benefit-saving_services
tag=1.0.5 docker-itau-preprod stack deploy --with-registry-auth -c itau-benefit-saving.yml itau-benefit-saving

*itau-rw_extensions
tag=3.0.5 docker-itau-preprod stack deploy --with-registry-auth -c itau-rw.yml itau-rw


==PROD==
*itau-com_services
tag=0.0.5 docker-itau-prod stack deploy --with-registry-auth -c itau-com.yml itau-com

*itau-som_services
tag=0.0.6 docker-itau-prod stack deploy --with-registry-auth -c itau-som.yml itau-som

*itau-benefit-saving_services
tag=1.0.5 docker-itau-prod stack deploy --with-registry-auth -c itau-benefit-saving.yml itau-benefit-saving

*itau-rw_extensions
tag=3.0.5 docker-itau-prod stack deploy --with-registry-auth -c itau-rw.yml itau-rw




com - release-0.0.5
som - release-0.0.6
benefit-saving - release-1.0.5
extensions - release-3.0.4