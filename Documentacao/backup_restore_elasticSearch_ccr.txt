
1º) DEFINIR AS VARIAVES DE AMBIENTE DO ELASTICSEARCH CCR
$ export cluster="claro-1a-elasticsearch5-client01.aws.zup.com.br"
$ export bucket="backup-claro-elasticsearch-ccr"
$ export backup="backup-migracao-$(date +%d-%m-%Y)"

2º) VERIFICAR SE O BUCKET DE BACKUP JÁ ESTA CONFIGURADO
$ curl -XGET "http://$cluster:9200/_snapshot/backup-claro-elasticsearch-ccr"

3º) REALIZAR O BACKUP DO ELASTICSEARCH ANTIGO
$ curl -X PUT "http://$cluster:9200/_snapshot/$bucket/$backup?"

4º) VERIFICAR E AGUARDAR O BACKUP FINALIZAR
$ watch -n5 curl "http://$cluster:9200/_cat/snapshots/$bucket?v&s=id&pretty"

5º) DEFINIR AS VARIAVES DE AMBIENTE DO ELASTICSEARCH CCR (AWS CLARO)
$ export cluster="vpc-claro-elasticsearch-ccr-prd-pmc3qzq72aedqipbpcpao4gkji.sa-east-1.es.amazonaws.com"
$ export bucket="backup-claro-elasticsearch-ccr"
$ export backup="backup-migracao-$(date +%d-%m-%Y)"

6º) DELETAR TODOS OS INDICES
$ curl -X DELETE "https://$cluster/_all"

7º) VERIFICAR SE O BUCKET DE BACKUP JÁ ESTA CONFIGURADO (AWS CLARO)
$ curl -XGET "https://$cluster/_snapshot/backup-claro-elasticsearch-ccr"

8º) LIMPAR OS DADOS DO ELASTICSEARCH
$ curl -X DELETE "https://$cluster/_all"

9º) REALIZAR O RESTORE DO ELASTICSEARCH NO NOVO CLUSTER (AWS CLARO)
$ curl -XPOST "https://$cluster/_snapshot/$bucket/$backup/_restore" -d '
{
  "indices": "*",
  "ignore_unavailable": true,
  "include_global_state": true,
  "rename_pattern": ".kibana",
  "rename_replacement": "restored_.kibana"
}'

8º) VERIFICAR O STATUS DO CLUSTER (AWS CLARO)
$ while true;do curl -s "https://$cluster/_cat/allocation?v";curl -s "https://$cluster/_cluster/health?pretty";sleep 10;clear;done